/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/reports/jacoco")
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
}

jar {
	manifest{
		attributes 'Implementation-Title': 'proyecto1',
					'Implementation-Version': version
	}
}

test {
	jacoco {
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination = file("jacoco/test-results")
}

jacocoTestReport{
	reports {
        xml.enabled false
        csv.enabled false
        html.destination file("$buildDir/reports/jacoco/jacocoHtml")
    }
}
jacocoTestReport.dependsOn(test)